<?php
//* @file
//* This file has all the theme hook function that requires to
//* preprocess before it prints in html. For functions such as
//* bma_preprocess_bma_landing_page or bma_preprocess_bma_subpage
//* make sure to go to comment section bma-subpage.html.twig or bma-landing-page.html.twig
//* to see available variables.
//* Make sure variables are placed in both in the function below and necessary twig file
//*
//*
//*
//*
//*

function nkh_preprocess_html(&$variables) {
  if ($node = \Drupal::request()->attributes->get('node')) {
    $variables['attributes']['class'][] = 'page-node-' . $node->id();
  }
  $current_path = \Drupal::service('path.current')->getPath();
  $variables['current_path'] = \Drupal::service('path.alias_manager')->getAliasByPath($current_path);
}

function nkh_theme_suggestions_page_alter(array &$suggestions, array $variables) {
  // Add content type suggestions.
  if ($node = \Drupal::request()->attributes->get('node')) {
    array_splice($suggestions, 1, 0, 'page__node__' . $node->getType());
  }
}

function nkh_preprocess_block(&$variables) {
  $element = $variables['content'];
  $variables['url'] = substr($_SERVER['REQUEST_URI'], 1);
}

function nkh_preprocess_entity_embed_container(&$variables) {
  $entityTypeID = $variables['element']['#entity']->getEntityType()->id();
  $bundle = $variables['element']['#entity']->bundle();
  $viewMode = $variables['element']['entity']['#view_mode'];
  $variables['attributes']['class'][] = 'entity-' . $entityTypeID . '-' . $bundle . ' ' . 'view-mode-' . $viewMode;
}

function nkh_preprocess_eck_entity(&$variables) {
  if($variables['entity']){
    if(isset($variables['entity']['field_link'])){
      if(isset($variables['entity']['field_link'][0]['#plain_text'])){
      $variables['entityLink'] = $variables['entity']['field_link'][0]['#plain_text'];
     }
    }
    if(isset($variables['entity']['field_image'])){
      $variables['entityLinkImage'] = $variables['entity']['field_image'][0];
    }
    if(isset($variables['entity']['title'])){
      $variables['entityLinkTitle'] = $variables['entity']['title'][0];
      //check to see if there is a value before establishing it.

    }
    //breaking this up since not all title have context
    if(isset($variables['entity']['field_title'])){
      $variables['entityFieldTitle'] = $variables['entity']['field_title'][0]['#context']['value'];
    }
    if(isset($variables['entity']['field_teaser_text'])){
      $variables['entityLinkTeaser'] = $variables['entity']['field_teaser_text'][0];
    }
    if(isset($variables['entity']['field_additional_link_text'])){
      $variables['entityLinkAdditional'] = $variables['entity']['field_additional_link_text'][0];
    }
    if(isset($variables['entity']['field_text'])){
      $variables['entityLinkBody'] = $variables['entity']['field_text'][0];
    }

    //for Homepage Feature Entity
    if(isset($variables['entity']['field_link'][0]['#title'])){
      $variables['entityLinkHomepage'] = $variables['entity']['field_link'][0]['#title'];
      //check to see if this is an external link
      if(substr($variables['entityLinkHomepage'], 0, 1) === '/') {
        $variables['entityLinkHomepageExternal'] = false;
      } else {
        $variables['entityLinkHomepageExternal'] = true;
      }
      
    }
    //check to see if this is an external link
    if(isset($variables['entityLink'])){
      if(substr($variables['entityLink'], 0, 1) === '/') {
        $variables['entityLinkExternal'] = false;
      } else {
        $variables['entityLinkExternal'] = true;
      }

    }

  }



}

function nkh_preprocess_node(&$variables) {

  $newsType = false;
  if(isset($variables['elements']['field_taxonomy_news'])){
    $whichNewsType = $variables['elements']['field_taxonomy_news'][0]['#title'];  
    //This is for Boilerplate text display in News/Press Release content type
    if($whichNewsType == 'Press Release'){
      $newsType = true;
    }  
  } else {
    $newsType = false;
  }
  $variables['newsType']= $newsType;

  //This is for the title on pages.
  //The boolean is to trigger it to print when it's not homepage.
  $whichPage = $variables['attributes']['about'];

  if($whichPage == '/homepage'){
    $isNotHomepage = false;
  }else{
    $isNotHomepage = true;
  }

  $variables['isNotHomepage']= $isNotHomepage;

  // ksm($variables['elements']['field_video']['0']['#media']);
  //to get length of subtitle
  //
  if(isset($variables['elements']['field_subtitle'])){
    $pageSubtitle = $variables['elements']['field_subtitle']['0']['#text'];
    
    $variables['pageSubtitle']= $pageSubtitle;

    $pageSubtitleCount = strlen($pageSubtitle);
    
    if($pageSubtitleCount < 30){
      $pageSubtitleCount = 'subtitle_length';
    }else{
      $pageSubtitleCount = 'subtitle_max_length';
    }

    $variables['pageSubtitleClass']= $pageSubtitleCount;

  }else {
    $variables['pageSubtitleClass'] = '';
  }

}

function nkh_preprocess_taxonomy_term(&$variables) {
  //check to see if there is a value before establishing it.
  if($variables['name']['0']['#context']){
    $variables['termTitle'] = $variables['name']['0']['#context']['value'];
  }
}

function short_str($str, $max) {
  // returns a trimmed version of a string with ellipsis after whole words when necessary
  $str = trim($str);
  if (strlen($str) > $max) {
    $s_pos = strpos($str, ' ');
    $cut = $s_pos === false || $s_pos > $max;
    $str = wordwrap($str, $max, ';;', $cut);
    $str = explode(';;', $str);
    $str = $str[0] . '...';
  }
  return $str;
}

function nkh_preprocess_field(&$variables) {
  // smart trim the body field of the teaser display mode of resource nodes
  $element = $variables['element'];
  if ($element['#entity_type'] == 'node') {
    if ($element['#bundle'] == 'resource'){
      if ($element['#view_mode'] == 'teaser')  {
        if (($element['#field_name'] == 'body')) {
          $body = strip_tags($variables['items'][0]['content']['#text']);
          $alteredBody = short_str($body, 200);
          $variables['items'][0]['content']['#text'] = $alteredBody;
        }
      }
    }
  }
}