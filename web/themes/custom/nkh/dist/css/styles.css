@charset "UTF-8";
/**
 * @file
 * Styles are loosely organized using the SMACSS technique.
 */
/* Import Sass mixins, variables, modules, etc. */
/* DECLARE FONTS
******************************/
/* VARIABLES
******************************/
body {
  background: #FFF; }

.light {
  border-color: #F2F2F2; }

.dark {
  border-color: #333; }

.highlight {
  border-color: #326CB1; }

.inner-wrapper {
  position: relative;
  max-width: 700px;
  margin: 0 30px; }
  .inner-wrapper:after {
    clear: both;
    content: "";
    display: table; }
  @media (min-width: 761px) and (max-width: 1023px) {
    .inner-wrapper {
      margin: 0 auto; } }
  @media (min-width: 1024px) {
    .inner-wrapper {
      max-width: 1320px;
      margin: 0 60px; } }
  @media (min-width: 1440px) {
    .inner-wrapper {
      margin: 0 auto; } }

.video-player {
  position: relative;
  padding-bottom: 56.25%;
  /* padding-top: 30px; */
  height: 0;
  overflow: hidden; }
  .video-player iframe,
  .video-player object,
  .video-player embed {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 0; }

/**
 * Accessibility features.
 */
/* element-invisible as defined by http://snook.ca/archives/html_and_css/hiding-content-for-accessibility */
.element-invisible,
.visually-hidden,
.element-focusable,
input[type="checkbox"],
input[type="radio"] {
  position: absolute !important;
  height: 1px;
  width: 1px;
  overflow: hidden;
  clip: rect(1px, 1px, 1px, 1px);
  white-space: nowrap; }

/* Turns off the element-invisible effect. */
.element-focusable:active, .element-focusable:focus {
  position: static !important;
  clip: auto;
  height: auto;
  width: auto;
  overflow: auto; }

/*
 * The skip-link link will be completely hidden until a user tabs to the link.
 */
.skip-link {
  display: block;
  background: #2d2d2d;
  color: #ffffff;
  text-align: center;
  height: 0; }
  .skip-link:focus {
    height: auto;
    padding: 10px; }

/*
 * Removing focus from content so that skip-link fix does not always highlight main container when any content is clicked
 */
#content {
  outline: none; }

/* GRID VARIABLES
********************************/
/* FUNCTIONS
********************************/
/* MIXINS
********************************/
/* DISPLAY
********************************/
.clearfix:after {
  content: "";
  display: table;
  clear: both; }

@media (min-width: 1024px) {
  .column-wrapper.twelve {
    margin-left: -20px;
    position: relative; }
    .column-wrapper.twelve:after {
      content: "";
      display: table;
      clear: both; }
    .column-wrapper.twelve .span-1 {
      width: calc((1/12)*100% - 20px);
      margin-left: calc((0/12)*100% + 20px);
      float: left; }
      .column-wrapper.twelve .span-1.offset-1 {
        margin-left: calc((1/12)*100% + 20px); }
      .column-wrapper.twelve .span-1.offset-2 {
        margin-left: calc((2/12)*100% + 20px); }
      .column-wrapper.twelve .span-1.offset-3 {
        margin-left: calc((3/12)*100% + 20px); }
      .column-wrapper.twelve .span-1.offset-4 {
        margin-left: calc((4/12)*100% + 20px); }
      .column-wrapper.twelve .span-1.offset-5 {
        margin-left: calc((5/12)*100% + 20px); }
      .column-wrapper.twelve .span-1.offset-6 {
        margin-left: calc((6/12)*100% + 20px); }
      .column-wrapper.twelve .span-1.offset-7 {
        margin-left: calc((7/12)*100% + 20px); }
      .column-wrapper.twelve .span-1.offset-8 {
        margin-left: calc((8/12)*100% + 20px); }
      .column-wrapper.twelve .span-1.offset-9 {
        margin-left: calc((9/12)*100% + 20px); }
      .column-wrapper.twelve .span-1.offset-10 {
        margin-left: calc((10/12)*100% + 20px); }
      .column-wrapper.twelve .span-1.offset-11 {
        margin-left: calc((11/12)*100% + 20px); }
      .column-wrapper.twelve .span-1.offset-12 {
        margin-left: calc((12/12)*100% + 20px); }
    .column-wrapper.twelve .span-2 {
      width: calc((2/12)*100% - 20px);
      margin-left: calc((0/12)*100% + 20px);
      float: left; }
      .column-wrapper.twelve .span-2.offset-1 {
        margin-left: calc((1/12)*100% + 20px); }
      .column-wrapper.twelve .span-2.offset-2 {
        margin-left: calc((2/12)*100% + 20px); }
      .column-wrapper.twelve .span-2.offset-3 {
        margin-left: calc((3/12)*100% + 20px); }
      .column-wrapper.twelve .span-2.offset-4 {
        margin-left: calc((4/12)*100% + 20px); }
      .column-wrapper.twelve .span-2.offset-5 {
        margin-left: calc((5/12)*100% + 20px); }
      .column-wrapper.twelve .span-2.offset-6 {
        margin-left: calc((6/12)*100% + 20px); }
      .column-wrapper.twelve .span-2.offset-7 {
        margin-left: calc((7/12)*100% + 20px); }
      .column-wrapper.twelve .span-2.offset-8 {
        margin-left: calc((8/12)*100% + 20px); }
      .column-wrapper.twelve .span-2.offset-9 {
        margin-left: calc((9/12)*100% + 20px); }
      .column-wrapper.twelve .span-2.offset-10 {
        margin-left: calc((10/12)*100% + 20px); }
      .column-wrapper.twelve .span-2.offset-11 {
        margin-left: calc((11/12)*100% + 20px); }
      .column-wrapper.twelve .span-2.offset-12 {
        margin-left: calc((12/12)*100% + 20px); }
    .column-wrapper.twelve .span-3 {
      width: calc((3/12)*100% - 20px);
      margin-left: calc((0/12)*100% + 20px);
      float: left; }
      .column-wrapper.twelve .span-3.offset-1 {
        margin-left: calc((1/12)*100% + 20px); }
      .column-wrapper.twelve .span-3.offset-2 {
        margin-left: calc((2/12)*100% + 20px); }
      .column-wrapper.twelve .span-3.offset-3 {
        margin-left: calc((3/12)*100% + 20px); }
      .column-wrapper.twelve .span-3.offset-4 {
        margin-left: calc((4/12)*100% + 20px); }
      .column-wrapper.twelve .span-3.offset-5 {
        margin-left: calc((5/12)*100% + 20px); }
      .column-wrapper.twelve .span-3.offset-6 {
        margin-left: calc((6/12)*100% + 20px); }
      .column-wrapper.twelve .span-3.offset-7 {
        margin-left: calc((7/12)*100% + 20px); }
      .column-wrapper.twelve .span-3.offset-8 {
        margin-left: calc((8/12)*100% + 20px); }
      .column-wrapper.twelve .span-3.offset-9 {
        margin-left: calc((9/12)*100% + 20px); }
      .column-wrapper.twelve .span-3.offset-10 {
        margin-left: calc((10/12)*100% + 20px); }
      .column-wrapper.twelve .span-3.offset-11 {
        margin-left: calc((11/12)*100% + 20px); }
      .column-wrapper.twelve .span-3.offset-12 {
        margin-left: calc((12/12)*100% + 20px); }
    .column-wrapper.twelve .span-4 {
      width: calc((4/12)*100% - 20px);
      margin-left: calc((0/12)*100% + 20px);
      float: left; }
      .column-wrapper.twelve .span-4.offset-1 {
        margin-left: calc((1/12)*100% + 20px); }
      .column-wrapper.twelve .span-4.offset-2 {
        margin-left: calc((2/12)*100% + 20px); }
      .column-wrapper.twelve .span-4.offset-3 {
        margin-left: calc((3/12)*100% + 20px); }
      .column-wrapper.twelve .span-4.offset-4 {
        margin-left: calc((4/12)*100% + 20px); }
      .column-wrapper.twelve .span-4.offset-5 {
        margin-left: calc((5/12)*100% + 20px); }
      .column-wrapper.twelve .span-4.offset-6 {
        margin-left: calc((6/12)*100% + 20px); }
      .column-wrapper.twelve .span-4.offset-7 {
        margin-left: calc((7/12)*100% + 20px); }
      .column-wrapper.twelve .span-4.offset-8 {
        margin-left: calc((8/12)*100% + 20px); }
      .column-wrapper.twelve .span-4.offset-9 {
        margin-left: calc((9/12)*100% + 20px); }
      .column-wrapper.twelve .span-4.offset-10 {
        margin-left: calc((10/12)*100% + 20px); }
      .column-wrapper.twelve .span-4.offset-11 {
        margin-left: calc((11/12)*100% + 20px); }
      .column-wrapper.twelve .span-4.offset-12 {
        margin-left: calc((12/12)*100% + 20px); }
    .column-wrapper.twelve .span-5 {
      width: calc((5/12)*100% - 20px);
      margin-left: calc((0/12)*100% + 20px);
      float: left; }
      .column-wrapper.twelve .span-5.offset-1 {
        margin-left: calc((1/12)*100% + 20px); }
      .column-wrapper.twelve .span-5.offset-2 {
        margin-left: calc((2/12)*100% + 20px); }
      .column-wrapper.twelve .span-5.offset-3 {
        margin-left: calc((3/12)*100% + 20px); }
      .column-wrapper.twelve .span-5.offset-4 {
        margin-left: calc((4/12)*100% + 20px); }
      .column-wrapper.twelve .span-5.offset-5 {
        margin-left: calc((5/12)*100% + 20px); }
      .column-wrapper.twelve .span-5.offset-6 {
        margin-left: calc((6/12)*100% + 20px); }
      .column-wrapper.twelve .span-5.offset-7 {
        margin-left: calc((7/12)*100% + 20px); }
      .column-wrapper.twelve .span-5.offset-8 {
        margin-left: calc((8/12)*100% + 20px); }
      .column-wrapper.twelve .span-5.offset-9 {
        margin-left: calc((9/12)*100% + 20px); }
      .column-wrapper.twelve .span-5.offset-10 {
        margin-left: calc((10/12)*100% + 20px); }
      .column-wrapper.twelve .span-5.offset-11 {
        margin-left: calc((11/12)*100% + 20px); }
      .column-wrapper.twelve .span-5.offset-12 {
        margin-left: calc((12/12)*100% + 20px); }
    .column-wrapper.twelve .span-6 {
      width: calc((6/12)*100% - 20px);
      margin-left: calc((0/12)*100% + 20px);
      float: left; }
      .column-wrapper.twelve .span-6.offset-1 {
        margin-left: calc((1/12)*100% + 20px); }
      .column-wrapper.twelve .span-6.offset-2 {
        margin-left: calc((2/12)*100% + 20px); }
      .column-wrapper.twelve .span-6.offset-3 {
        margin-left: calc((3/12)*100% + 20px); }
      .column-wrapper.twelve .span-6.offset-4 {
        margin-left: calc((4/12)*100% + 20px); }
      .column-wrapper.twelve .span-6.offset-5 {
        margin-left: calc((5/12)*100% + 20px); }
      .column-wrapper.twelve .span-6.offset-6 {
        margin-left: calc((6/12)*100% + 20px); }
      .column-wrapper.twelve .span-6.offset-7 {
        margin-left: calc((7/12)*100% + 20px); }
      .column-wrapper.twelve .span-6.offset-8 {
        margin-left: calc((8/12)*100% + 20px); }
      .column-wrapper.twelve .span-6.offset-9 {
        margin-left: calc((9/12)*100% + 20px); }
      .column-wrapper.twelve .span-6.offset-10 {
        margin-left: calc((10/12)*100% + 20px); }
      .column-wrapper.twelve .span-6.offset-11 {
        margin-left: calc((11/12)*100% + 20px); }
      .column-wrapper.twelve .span-6.offset-12 {
        margin-left: calc((12/12)*100% + 20px); }
    .column-wrapper.twelve .span-7 {
      width: calc((7/12)*100% - 20px);
      margin-left: calc((0/12)*100% + 20px);
      float: left; }
      .column-wrapper.twelve .span-7.offset-1 {
        margin-left: calc((1/12)*100% + 20px); }
      .column-wrapper.twelve .span-7.offset-2 {
        margin-left: calc((2/12)*100% + 20px); }
      .column-wrapper.twelve .span-7.offset-3 {
        margin-left: calc((3/12)*100% + 20px); }
      .column-wrapper.twelve .span-7.offset-4 {
        margin-left: calc((4/12)*100% + 20px); }
      .column-wrapper.twelve .span-7.offset-5 {
        margin-left: calc((5/12)*100% + 20px); }
      .column-wrapper.twelve .span-7.offset-6 {
        margin-left: calc((6/12)*100% + 20px); }
      .column-wrapper.twelve .span-7.offset-7 {
        margin-left: calc((7/12)*100% + 20px); }
      .column-wrapper.twelve .span-7.offset-8 {
        margin-left: calc((8/12)*100% + 20px); }
      .column-wrapper.twelve .span-7.offset-9 {
        margin-left: calc((9/12)*100% + 20px); }
      .column-wrapper.twelve .span-7.offset-10 {
        margin-left: calc((10/12)*100% + 20px); }
      .column-wrapper.twelve .span-7.offset-11 {
        margin-left: calc((11/12)*100% + 20px); }
      .column-wrapper.twelve .span-7.offset-12 {
        margin-left: calc((12/12)*100% + 20px); }
    .column-wrapper.twelve .span-8 {
      width: calc((8/12)*100% - 20px);
      margin-left: calc((0/12)*100% + 20px);
      float: left; }
      .column-wrapper.twelve .span-8.offset-1 {
        margin-left: calc((1/12)*100% + 20px); }
      .column-wrapper.twelve .span-8.offset-2 {
        margin-left: calc((2/12)*100% + 20px); }
      .column-wrapper.twelve .span-8.offset-3 {
        margin-left: calc((3/12)*100% + 20px); }
      .column-wrapper.twelve .span-8.offset-4 {
        margin-left: calc((4/12)*100% + 20px); }
      .column-wrapper.twelve .span-8.offset-5 {
        margin-left: calc((5/12)*100% + 20px); }
      .column-wrapper.twelve .span-8.offset-6 {
        margin-left: calc((6/12)*100% + 20px); }
      .column-wrapper.twelve .span-8.offset-7 {
        margin-left: calc((7/12)*100% + 20px); }
      .column-wrapper.twelve .span-8.offset-8 {
        margin-left: calc((8/12)*100% + 20px); }
      .column-wrapper.twelve .span-8.offset-9 {
        margin-left: calc((9/12)*100% + 20px); }
      .column-wrapper.twelve .span-8.offset-10 {
        margin-left: calc((10/12)*100% + 20px); }
      .column-wrapper.twelve .span-8.offset-11 {
        margin-left: calc((11/12)*100% + 20px); }
      .column-wrapper.twelve .span-8.offset-12 {
        margin-left: calc((12/12)*100% + 20px); }
    .column-wrapper.twelve .span-9 {
      width: calc((9/12)*100% - 20px);
      margin-left: calc((0/12)*100% + 20px);
      float: left; }
      .column-wrapper.twelve .span-9.offset-1 {
        margin-left: calc((1/12)*100% + 20px); }
      .column-wrapper.twelve .span-9.offset-2 {
        margin-left: calc((2/12)*100% + 20px); }
      .column-wrapper.twelve .span-9.offset-3 {
        margin-left: calc((3/12)*100% + 20px); }
      .column-wrapper.twelve .span-9.offset-4 {
        margin-left: calc((4/12)*100% + 20px); }
      .column-wrapper.twelve .span-9.offset-5 {
        margin-left: calc((5/12)*100% + 20px); }
      .column-wrapper.twelve .span-9.offset-6 {
        margin-left: calc((6/12)*100% + 20px); }
      .column-wrapper.twelve .span-9.offset-7 {
        margin-left: calc((7/12)*100% + 20px); }
      .column-wrapper.twelve .span-9.offset-8 {
        margin-left: calc((8/12)*100% + 20px); }
      .column-wrapper.twelve .span-9.offset-9 {
        margin-left: calc((9/12)*100% + 20px); }
      .column-wrapper.twelve .span-9.offset-10 {
        margin-left: calc((10/12)*100% + 20px); }
      .column-wrapper.twelve .span-9.offset-11 {
        margin-left: calc((11/12)*100% + 20px); }
      .column-wrapper.twelve .span-9.offset-12 {
        margin-left: calc((12/12)*100% + 20px); }
    .column-wrapper.twelve .span-10 {
      width: calc((10/12)*100% - 20px);
      margin-left: calc((0/12)*100% + 20px);
      float: left; }
      .column-wrapper.twelve .span-10.offset-1 {
        margin-left: calc((1/12)*100% + 20px); }
      .column-wrapper.twelve .span-10.offset-2 {
        margin-left: calc((2/12)*100% + 20px); }
      .column-wrapper.twelve .span-10.offset-3 {
        margin-left: calc((3/12)*100% + 20px); }
      .column-wrapper.twelve .span-10.offset-4 {
        margin-left: calc((4/12)*100% + 20px); }
      .column-wrapper.twelve .span-10.offset-5 {
        margin-left: calc((5/12)*100% + 20px); }
      .column-wrapper.twelve .span-10.offset-6 {
        margin-left: calc((6/12)*100% + 20px); }
      .column-wrapper.twelve .span-10.offset-7 {
        margin-left: calc((7/12)*100% + 20px); }
      .column-wrapper.twelve .span-10.offset-8 {
        margin-left: calc((8/12)*100% + 20px); }
      .column-wrapper.twelve .span-10.offset-9 {
        margin-left: calc((9/12)*100% + 20px); }
      .column-wrapper.twelve .span-10.offset-10 {
        margin-left: calc((10/12)*100% + 20px); }
      .column-wrapper.twelve .span-10.offset-11 {
        margin-left: calc((11/12)*100% + 20px); }
      .column-wrapper.twelve .span-10.offset-12 {
        margin-left: calc((12/12)*100% + 20px); }
    .column-wrapper.twelve .span-11 {
      width: calc((11/12)*100% - 20px);
      margin-left: calc((0/12)*100% + 20px);
      float: left; }
      .column-wrapper.twelve .span-11.offset-1 {
        margin-left: calc((1/12)*100% + 20px); }
      .column-wrapper.twelve .span-11.offset-2 {
        margin-left: calc((2/12)*100% + 20px); }
      .column-wrapper.twelve .span-11.offset-3 {
        margin-left: calc((3/12)*100% + 20px); }
      .column-wrapper.twelve .span-11.offset-4 {
        margin-left: calc((4/12)*100% + 20px); }
      .column-wrapper.twelve .span-11.offset-5 {
        margin-left: calc((5/12)*100% + 20px); }
      .column-wrapper.twelve .span-11.offset-6 {
        margin-left: calc((6/12)*100% + 20px); }
      .column-wrapper.twelve .span-11.offset-7 {
        margin-left: calc((7/12)*100% + 20px); }
      .column-wrapper.twelve .span-11.offset-8 {
        margin-left: calc((8/12)*100% + 20px); }
      .column-wrapper.twelve .span-11.offset-9 {
        margin-left: calc((9/12)*100% + 20px); }
      .column-wrapper.twelve .span-11.offset-10 {
        margin-left: calc((10/12)*100% + 20px); }
      .column-wrapper.twelve .span-11.offset-11 {
        margin-left: calc((11/12)*100% + 20px); }
      .column-wrapper.twelve .span-11.offset-12 {
        margin-left: calc((12/12)*100% + 20px); }
    .column-wrapper.twelve .span-12 {
      width: calc((12/12)*100% - 20px);
      margin-left: calc((0/12)*100% + 20px);
      float: left; }
      .column-wrapper.twelve .span-12.offset-1 {
        margin-left: calc((1/12)*100% + 20px); }
      .column-wrapper.twelve .span-12.offset-2 {
        margin-left: calc((2/12)*100% + 20px); }
      .column-wrapper.twelve .span-12.offset-3 {
        margin-left: calc((3/12)*100% + 20px); }
      .column-wrapper.twelve .span-12.offset-4 {
        margin-left: calc((4/12)*100% + 20px); }
      .column-wrapper.twelve .span-12.offset-5 {
        margin-left: calc((5/12)*100% + 20px); }
      .column-wrapper.twelve .span-12.offset-6 {
        margin-left: calc((6/12)*100% + 20px); }
      .column-wrapper.twelve .span-12.offset-7 {
        margin-left: calc((7/12)*100% + 20px); }
      .column-wrapper.twelve .span-12.offset-8 {
        margin-left: calc((8/12)*100% + 20px); }
      .column-wrapper.twelve .span-12.offset-9 {
        margin-left: calc((9/12)*100% + 20px); }
      .column-wrapper.twelve .span-12.offset-10 {
        margin-left: calc((10/12)*100% + 20px); }
      .column-wrapper.twelve .span-12.offset-11 {
        margin-left: calc((11/12)*100% + 20px); }
      .column-wrapper.twelve .span-12.offset-12 {
        margin-left: calc((12/12)*100% + 20px); } }

@media (min-width: 1024px) {
  .two-column-grid {
    margin-top: -20px;
    margin-left: -20px;
    position: relative; }
    .two-column-grid:after {
      content: "";
      display: table;
      clear: both; }
    .two-column-grid > * {
      width: calc((1/2)*100% - 20px);
      margin-left: calc((0/2)*100% + 20px);
      float: left;
      margin-top: 20px;
      background-color: #eee; }
      .two-column-grid > * > *:first-child {
        margin-top: 0; }
      .two-column-grid > * > *:last-child {
        margin-bottom: 0; }
      .two-column-grid > *:nth-child(2n+1) {
        clear: left; }
  .three-column-grid {
    margin-top: -20px;
    margin-left: -20px;
    position: relative; }
    .three-column-grid:after {
      content: "";
      display: table;
      clear: both; }
    .three-column-grid > * {
      width: calc((1/3)*100% - 20px);
      margin-left: calc((0/3)*100% + 20px);
      float: left;
      margin-top: 20px;
      background-color: #eee; }
      .three-column-grid > * > *:first-child {
        margin-top: 0; }
      .three-column-grid > * > *:last-child {
        margin-bottom: 0; }
      .three-column-grid > *:nth-child(3n+1) {
        clear: left; }
  .four-column-grid {
    margin-top: -20px;
    margin-left: -20px;
    position: relative; }
    .four-column-grid:after {
      content: "";
      display: table;
      clear: both; }
    .four-column-grid > * {
      width: calc((1/4)*100% - 20px);
      margin-left: calc((0/4)*100% + 20px);
      float: left;
      margin-top: 20px;
      background-color: #eee; }
      .four-column-grid > * > *:first-child {
        margin-top: 0; }
      .four-column-grid > * > *:last-child {
        margin-bottom: 0; }
      .four-column-grid > *:nth-child(4n+1) {
        clear: left; } }

@media (min-width: 761px) and (max-width: 1023px) {
  .two-column-grid,
  .three-column-grid,
  .four-column-grid {
    margin-top: -20px;
    margin-left: -20px;
    position: relative; }
    .two-column-grid:after,
    .three-column-grid:after,
    .four-column-grid:after {
      content: "";
      display: table;
      clear: both; }
    .two-column-grid > *,
    .three-column-grid > *,
    .four-column-grid > * {
      width: calc((1/2)*100% - 20px);
      margin-left: calc((0/2)*100% + 20px);
      float: left;
      margin-top: 20px;
      background-color: #eee; }
      .two-column-grid > * > *:first-child,
      .three-column-grid > * > *:first-child,
      .four-column-grid > * > *:first-child {
        margin-top: 0; }
      .two-column-grid > * > *:last-child,
      .three-column-grid > * > *:last-child,
      .four-column-grid > * > *:last-child {
        margin-bottom: 0; }
      .two-column-grid > *:nth-child(2n+1),
      .three-column-grid > *:nth-child(2n+1),
      .four-column-grid > *:nth-child(2n+1) {
        clear: left; } }

.example-breakout {
  background-color: #326CB1; }
  @media (min-width: 1024px) {
    .example-breakout {
      margin-left: calc((100%/1) * -1 - 20px);
      margin-right: calc((100%/1) * -1 - 20px);
      width: auto;
      position: relative; } }

/* CENTERING OFFSET
********************************/
.center-10 {
  width: calc((10/12)*100% - 0);
  margin-left: calc((1/12)*100% + 0); }

.center-8 {
  width: calc((8/12)*100% - 0);
  margin-left: calc((2/12)*100% + 0); }

.center-6 {
  width: calc((6/12)*100% - 0);
  margin-left: calc((3/12)*100% + 0); }

.center-4 {
  width: calc((4/12)*100% - 0);
  margin-left: calc((4/12)*100% + 0); }

/* GRID CSS SYSTEM
********************************/
.four-column-gridcss {
  display: -ms-grid;
  display: grid;
  -ms-grid-columns: (1fr)[4];
      grid-template-columns: repeat(4, 1fr);
  grid-column-gap: 20px;
  grid-row-gap: 20px;
  grid-auto-flow: dense; }
  .four-column-gridcss > * > *:first-child {
    margin-top: 0; }
  .four-column-gridcss > * > *:last-child {
    margin-bottom: 0; }
  .four-column-gridcss > * {
    background: #eee; }

.example-larger {
  -ms-grid-column-span: 2;
      grid-column-end: span 2;
  -ms-grid-row-span: 3;
      grid-row-end: span 3; }

.example-position {
  /* autoprefixer: off */
  grid-row: 1/3;
  grid-column: 1;
  background-color: #326CB1; }

/*! standardize.css v1.0.0 | MIT License | github.com/jspellman814/standardize */
/**
 * This file is a slight fork of these original sources:
 * - http://necolas.github.io/normalize.css/
 * - https://jonathantneal.github.io/sanitize.css/
 */
/**
 * Base
 */
* {
  box-sizing: border-box; }

html {
  font-family: sans-serif;
  font-size: 10px; }

/* Remove default margin. */
body {
  margin: 0;
  padding: 0; }

/**
 * Links
 */
/* Address `outline` inconsistency between Chrome and other browsers. */
a:focus {
  outline: thin dotted; }

/* Improve readability when focused and also mouse hovered in all browsers. */
a:active,
a:hover {
  outline: 0; }

/**
 * HTML5 display definitions
 */
/* Correct `block` display not defined in IE 8/9. */
article,
aside,
details,
figcaption,
figure,
footer,
header,
main,
nav,
section,
summary {
  display: block;
  position: relative; }

/* Correct `inline-block` display not defined in IE 8/9. */
audio,
canvas,
video {
  display: inline-block; }

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/* Address styling not present in IE 8/9. */
[hidden] {
  display: none; }

/**
 * Typography
 */
blockquote,
p {
  margin: 1em 0; }

/* Address styling not present in IE 8/9, Safari 5, and Chrome. */
abbr[title] {
  border-bottom: 1px dotted; }

/* Address style set to `bolder` in Firefox 4+, Safari 5, and Chrome. */
b,
strong {
  font-weight: bold; }

/* Address styling not present in Safari 5 and Chrome. */
dfn {
  font-style: italic; }

/* Address differences between Firefox and other browsers. */
hr {
  box-sizing: content-box;
  height: 0;
  border-bottom: 1px solid;
  margin: 1em 0; }

/* Address styling not present in IE 8/9. */
mark {
  background: #ff0;
  color: #000; }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
pre,
samp,
tt,
var {
  font-family: monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Improve readability of pre-formatted text in all browsers. */
pre {
  white-space: pre-wrap; }

/* Set consistent quote types. */
q {
  quotes: "\201C" "\201D" "\2018" "\2019"; }

/* Address inconsistent and variable font size in all browsers. */
small {
  font-size: 80%; }

/* Prevent `sub` and `sup` elements from affecting the line height in all browsers. */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -.25em; }

sup {
  top: -.5em; }

/**
 * Lists
 */
dl,
menu,
ol,
ul {
  /* Address margins set differently in IE 6/7. */
  margin: 1em 0; }

ol ol,
ol ul,
ul ol,
ul ul {
  /* Turn off margins on nested lists. */
  margin: 0; }

dd {
  margin: 0 0 0 30px;
  /* LTR */ }

/* Address paddings set differently in IE 6/7. */
menu,
ol,
ul {
  padding: 0 0 0 30px;
  /* LTR */ }

/**
 * Remove the list style on navigation lists in all browsers (opinionated).
 */
nav ol,
nav ul {
  list-style: none; }

/**
 * Embedded content and figures
 */
/* Remove the border on images inside links in IE 10-. */
img {
  /* Remove border when inside `a` element in IE 8/9. */
  border: 0;
  /* Suppress the space beneath the baseline */
  vertical-align: bottom;
  /* Responsive images */
  max-width: 100%;
  height: auto;
  /* Correct IE 8 not scaling image height when resized. */
  width: auto; }

/* Correct overflow displayed oddly in IE 9. */
svg:not(:root) {
  overflow: hidden; }

/**
 * Add the correct display in IE 9-.
 * 1. Add the correct display in IE.
 */
figcaption,
figure,
main {
  /* 1 */
  display: block; }

/* Address margin not present in IE 8/9 and Safari 5. */
figure {
  margin: 0; }

/**
 * Forms
 */
/* Define consistent border */
fieldset {
  border: 1px solid; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out `fieldset` elements in all browsers.
 */
legend {
  border: 0;
  /* 2 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * 1. Correct font family not being inherited in all browsers.
 * 2. Correct font size not being inherited in all browsers.
 * 3. Address margins set differently in Firefox 4+, Safari 5, and Chrome.
 * 4. Improve appearance and consistency with IE 6/7.
 * 5. Keep form elements constrained in their containers.
 * 6. Remove the default styling in all browsers (opinionated).
 */
button,
input,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 2 */
  margin: 0;
  /* 3 */
  max-width: 100%;
  /* 5 */
  background-color: transparent;
  /* 6 */
  color: inherit;
  /* 6 */
  font-size: inherit;
  /* 6 */
  line-height: inherit;
  /* 6 */ }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 * 2. Address Firefox 4+ setting `line-height` on `input` using `!important` in the UA stylesheet.
 */
button,
input {
  line-height: normal;
  /* 2 */
  overflow: visible;
  /* 1 */ }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
 *    controls in Android 4.
 * 2. Correct the inability to style clickable types in iOS and Safari.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default; }

/**
 * 1. Address box sizing set to `content-box` in IE 8/9.
 * 2. Remove excess padding in IE 8/9.
 * 3. Remove excess padding in IE 7.
 *    Known issue: excess padding remains in IE 6.
 */
input[type="checkbox"],
input[type="radio"] {
  padding: 0;
  /* 2 */ }

/**
 * 1. Address `appearance` set to `searchfield` in Safari 5 and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari 5 and Chrome
 *    (include `-moz` to future-proof).
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  box-sizing: content-box; }

/**
 * Remove inner padding and search cancel button in Safari 5 and Chrome
 * on OS X.
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/* Remove inner padding and border in Firefox 4+. */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * 1. Remove the default vertical scrollbar in IE.
 * 2. Improve readability and alignment in all browsers.
 */
textarea {
  overflow: auto;
  /* 1 */
  vertical-align: top;
  /* 2 */ }

/* Drupal-style form labels. */
label, .field .field-label {
  display: block;
  font-weight: bold; }

/**
 * Tables
 */
table {
  /* Remove most spacing between table cells. */
  border-collapse: collapse;
  border-spacing: 0;
  /* Prevent cramped-looking tables */
  width: 100%;
  /* Add margins. */
  margin: 1em 0; }

.svg-home, .home-icon {
  background: url("../svg/svg-sprite.svg") no-repeat;
  background-position: 100% 0; }

.svg-home-dims, .home-icon {
  width: 24px;
  height: 24px; }

.svg-library {
  background: url("../svg/svg-sprite.svg") no-repeat;
  background-position: 0 0; }

.svg-library-dims {
  width: 25px;
  height: 24px; }

.svg-tv {
  background: url("../svg/svg-sprite.svg") no-repeat;
  background-position: 0 100%; }

.svg-tv-dims {
  width: 24px;
  height: 24px; }

.svg-twitter {
  background: url("../svg/svg-sprite.svg") no-repeat;
  background-position: 96% 100%; }

.svg-twitter-dims {
  width: 24px;
  height: 24px; }

.home-icon {
  width: 64px;
  height: 64px;
  background-size: 200%; }

body {
  font-size: 18px;
  font-size: 1.8rem;
  line-height: 1.6em;
  font-family: "Gotham SSm A", "Gotham SSm B", "Gotham", arial, sans-serif;
  min-width: 320px;
  color: #333; }
  @media (max-width: 1023px) {
    body.noscroll {
      overflow: hidden;
      height: 100%;
      width: 100%;
      position: fixed; } }

h1 {
  font-family: "Gotham SSm A", "Gotham SSm B", "Gotham", arial, sans-serif; }

h2,
h3,
h4,
h5,
h6 {
  font-family: "Gotham SSm A", "Gotham SSm B", "Gotham", arial, sans-serif; }

a {
  color: #326CB1;
  text-decoration: none; }

hr {
  border-bottom: 1px solid #ccc; }

blockquote {
  border-left: 1px solid #ccc;
  padding-left: 30px;
  font-size: 1.5em;
  line-height: 1.25em; }
  blockquote p {
    margin: 0.5em 0; }

cite {
  font-size: 16px;
  font-size: 1.6rem;
  display: block; }

.intro {
  font-size: 1.5em;
  line-height: 1.5em; }

.button-link,
button,
input[type="submit"],
input[type="button"] {
  box-sizing: border-box;
  position: relative;
  z-index: 1;
  border: 0;
  -webkit-appearance: none;
  appearance: none;
  -moz-appearance: none;
  display: inline-block;
  border-radius: 0;
  cursor: pointer;
  background-color: #326CB1;
  color: #fff;
  font-family: "Gotham SSm A", "Gotham SSm B", "Gotham", arial, sans-serif;
  line-height: 40px;
  height: 40px;
  padding: 0 20px; }
  .no-touchevents .button-link:hover, .no-touchevents .button-link:focus,
  .no-touchevents button:hover,
  .no-touchevents
  input[type="submit"]:hover,
  .no-touchevents
  input[type="button"]:hover,
  .no-touchevents button:focus,
  .no-touchevents
  input[type="submit"]:focus,
  .no-touchevents
  input[type="button"]:focus {
    background-color: #4a85cc; }

#logo img {
  max-width: 160px; }

/**
 * Global Tables
 */
table {
  border-color: lightgray;
  border: 0;
  width: 100% !important; }
  table tr {
    border: 0px solid lightgray; }
    table tr:nth-child(even) {
      background: #f7f7f7; }
  table td,
  table th {
    border-color: lightgray;
    padding: 0.5em 1em;
    text-align: left; }
    table td > *:first-child,
    table th > *:first-child {
      margin-top: 0; }
    table td > *:last-child,
    table th > *:last-child {
      margin-bottom: 0; }
  table thead th,
  table tbody th {
    font-weight: bold;
    text-transform: uppercase;
    font-size: 0.92em;
    background: #e7e7e7; }
  table th.empty-header-cell {
    visibility: hidden; }

/**
 * Responsive data tables with headers
 */
@media (max-width: 1023px) {
  table.data {
    overflow: hidden;
    display: block; }
  table.data thead,
  table.data th {
    display: none; }
  table.data tbody,
  table.data tbody th,
  table.data tr,
  table.data td,
  table.data caption {
    display: block;
    width: 100%;
    float: left; }
  table.data tr {
    border-width: 1px;
    padding: 20px 10px; }
    table.data tr + tr {
      border-top-width: 0; }
    table.data tr > th,
    table.data tr > td {
      border-width: 0; }
  table.data td.labeled:before {
    content: attr(data-th);
    display: block;
    font-weight: bold;
    font-size: 0.92em;
    color: #555;
    border-bottom: 1px solid lightgray;
    margin-bottom: 0.5em;
    padding-bottom: 0.5em; } }

form {
  margin-top: 20px;
  margin-bottom: 20px; }
  form > *:first-child {
    margin-top: 0; }
  form > *:last-child {
    margin-bottom: 0; }

.form-item,
.form-actions {
  margin: 20px 0; }

label, .field .field-label {
  font-family: "Gotham SSm A", "Gotham SSm B", "Gotham", arial, sans-serif;
  margin-bottom: 5px; }

input[type="text"],
input[type="search"],
input[type="email"],
input[type="password"],
input[type="number"],
textarea {
  padding: 6px 12px;
  font-family: "Gotham SSm A", "Gotham SSm B", "Gotham", arial, sans-serif;
  min-width: 280px;
  box-sizing: border-box;
  border: 1px solid #ccc; }

input[type="checkbox"] + label, .field input[type="checkbox"] + .field-label,
input[type="radio"] + label, .field
input[type="radio"] + .field-label {
  display: inline;
  font-weight: normal;
  box-sizing: border-box;
  position: relative;
  cursor: pointer; }
  input[type="checkbox"] + label:before, .field input[type="checkbox"] + .field-label:before,
  input[type="radio"] + label:before, .field
  input[type="radio"] + .field-label:before {
    content: '';
    display: inline-block;
    height: 14px;
    width: 14px;
    margin-bottom: -2px;
    margin-right: 8px;
    overflow: hidden;
    border: 1px solid #326CB1; }
  input[type="checkbox"] + label.focused:before, .field input[type="checkbox"] + .focused.field-label:before,
  input[type="radio"] + label.focused:before, .field
  input[type="radio"] + .focused.field-label:before {
    box-shadow: 0 0 5px #444; }

input[type="checkbox"]:checked + label:before, .field input[type="checkbox"]:checked + .field-label:before,
input[type="radio"]:checked + label:before, .field
input[type="radio"]:checked + .field-label:before {
  background-color: #326CB1; }

input[type="radio"] + label:before, .field input[type="radio"] + .field-label:before {
  border-radius: 50%; }

.selectlist {
  position: relative;
  background-clip: padding-box;
  background-color: #eee;
  border: 1px solid #A2A2A2;
  display: inline-block; }

select {
  box-sizing: border-box;
  position: relative;
  display: block;
  z-index: 2;
  border: 1px solid #A2A2A2;
  -webkit-appearance: none;
  appearance: none;
  -moz-appearance: none;
  -moz-padding-end: 10px;
  line-height: 1em;
  height: 40px;
  padding: 8px 16px;
  border-radius: 0;
  cursor: pointer;
  font-family: "Gotham SSm A", "Gotham SSm B", "Gotham", arial, sans-serif;
  min-width: 200px;
  background-color: #eee; }
  .selectlist select {
    float: left;
    background: transparent;
    background-color: transparent;
    margin: 0;
    line-height: 14px;
    border: none; }

#googlemap {
  height: 400px;
  width: auto; }

#modal-content {
  display: none; }

/**
 * Navigation bar.
 */
#navigation {
  padding: 1em 0;
  font-family: "Gotham SSm A", "Gotham SSm B", "Gotham", arial, sans-serif; }
  #navigation > ul.menu {
    list-style: none;
    margin: 0;
    padding: 0; }
    #navigation > ul.menu:after {
      content: "";
      display: table;
      clear: both; }
    #navigation > ul.menu li {
      list-style-type: none;
      list-style-image: none;
      float: left;
      display: block; }
    #navigation > ul.menu > li {
      position: relative; }
      #navigation > ul.menu > li > ul.menu {
        position: absolute;
        left: -9999px;
        top: 0;
        z-index: 100;
        padding: 0;
        background-color: #F2F2F2; }
        #navigation > ul.menu > li > ul.menu li {
          white-space: nowrap; }
      #navigation > ul.menu > li.focus, #navigation > ul.menu > li:hover {
        background-color: #F2F2F2; }
        #navigation > ul.menu > li.focus > ul.menu, #navigation > ul.menu > li:hover > ul.menu {
          left: 0;
          top: 100%; }
      #navigation > ul.menu > li a {
        font-weight: 600;
        padding: 10px 16px;
        display: block; }
        #navigation > ul.menu > li a.active {
          border-bottom: 2px solid #326CB1; }
        .no-touchevents #navigation > ul.menu > li a:hover, .no-touchevents #navigation > ul.menu > li a:focus {
          color: #666; }
  @media (max-width: 1023px) {
    #navigation {
      background-color: #f7f7f7;
      height: 100%;
      overflow-y: auto;
      padding: 0 0 50px;
      position: fixed;
      right: -255px;
      top: 76px;
      width: 255px;
      z-index: 99999;
      transition-property: right;
      transition-duration: 300ms; }
      .menu-active #navigation {
        right: 0;
        transition: all 500ms ease; }
      #navigation .menu > li {
        border-bottom: 1px solid #A2A2A2;
        cursor: pointer;
        display: block;
        float: none;
        list-style: none;
        padding: 12px 16px;
        text-decoration: none;
        font-size: 20px; } }

/**
 * Breadcrumb navigation.
 */
.breadcrumb ol {
  margin: 0;
  padding: 0; }

.breadcrumb li {
  display: inline;
  list-style-type: none;
  margin: 0;
  padding: 0; }

/**
 * Pager
 */
/* A list of page numbers when more than 1 page of content is available. */
.pager {
  clear: both;
  padding: 0;
  text-align: center; }

.pager-item,
.pager-first,
.pager-previous,
.pager-next,
.pager-last,
.pager-ellipsis, .pager-current {
  display: inline;
  padding: 0 0.5em;
  list-style-type: none;
  background-image: none; }

.pager-item,
.pager-first,
.pager-previous,
.pager-next,
.pager-last,
.pager-ellipsis {
  /* A concatenation of several list items using an ellipsis. */ }

/* The current page's list item. */
.pager-current {
  font-weight: bold; }

/**
 * Search
 */
.tm-tab-enabled .tm-tab-label {
  display: none; }

.tm-tab-enabled .tm-tab-content.tm-tab-hide {
  display: none; }

.tm-tab-enabled .tm-tab-links .active {
  font-weight: bold; }

.share-buttons {
  top: 30%;
  width: 3pc;
  z-index: 10000; }
  @media (min-width: medium) {
    .share-buttons {
      bottom: 0;
      top: auto;
      width: 100%; } }
  .share-buttons .social-share {
    cursor: pointer;
    display: block;
    padding: 12px 0;
    transition: .15s ease-out;
    width: 3pc; }
    @media (min-width: medium) {
      .share-buttons .social-share {
        float: left; } }
    @media screen and (min-width: 911px) {
      .share-buttons .social-share:hover, .share-buttons .social-share:active, .share-buttons .social-share:focus {
        width: 4pc !important; } }
    .share-buttons .social-share.linkedin {
      background-color: #0077b5; }
      .share-buttons .social-share.linkedin:hover, .share-buttons .social-share.linkedin:active, .share-buttons .social-share.linkedin:focus {
        background-color: #046293; }
    .share-buttons .social-share.pinterest {
      background-color: #bd081c; }
      .share-buttons .social-share.pinterest:hover, .share-buttons .social-share.pinterest:active, .share-buttons .social-share.pinterest:focus {
        background-color: #8c0615; }
    .share-buttons .social-share.google {
      background-color: #dd4b39; }
      .share-buttons .social-share.google:hover, .share-buttons .social-share.google:active, .share-buttons .social-share.google:focus {
        background-color: #c23321; }
    .share-buttons .social-share.twitter {
      background-color: #55acee; }
      .share-buttons .social-share.twitter:hover, .share-buttons .social-share.twitter:active, .share-buttons .social-share.twitter:focus {
        background-color: #2795e9; }
    .share-buttons .social-share.facebook {
      background-color: #3b5998; }
      .share-buttons .social-share.facebook:hover, .share-buttons .social-share.facebook:active, .share-buttons .social-share.facebook:focus {
        background-color: #2d4373; }
    .share-buttons .social-share.email {
      background-color: #777; }
      .share-buttons .social-share.email:hover, .share-buttons .social-share.email:active, .share-buttons .social-share.email:focus {
        background-color: #5e5e5e; }
    .share-buttons .social-share svg {
      display: block;
      fill: #fff;
      height: 1.5em;
      margin: 0 auto;
      stroke: none;
      width: 1.5em; }

/**
 * Blocks.
 */
/* Block wrapper. */
.block {
  position: relative; }

/**
 * @file
 * Positioning for a responsive layout.
 *
 * Define CSS classes to create a fluid grid layout with optional sidebars
 * depending on whether blocks are placed in the left or right sidebars.
 *
 */
/**
 * Center the page.
 *
 * For screen sizes larger than 1200px, prevent excessively long lines of text
 * by setting a max-width.
 */
/* LAYOUT FOR MOBILE MENU */
@media (max-width: 1023px) {
  #main,
  #footer,
  #region-bottom {
    position: relative;
    left: 0;
    transition: all 500ms ease; }
    .menu-active #main, .menu-active
    #footer, .menu-active
    #region-bottom {
      left: -255px;
      opacity: 0.2;
      transition: all 500ms ease; } }

#main:after {
  content: "";
  display: table;
  clear: both; }

@media (min-width: 1024px) {
  .no-sidebars #content {
    width: calc((10/14)*100% - 20px);
    margin-left: calc((2/14)*100% + 20px);
    float: left; }
  .sidebar-first #content {
    width: calc((10/14)*100% - 20px);
    margin-left: calc((0/14)*100% + 20px);
    float: left; }
  .sidebar-first .sidebar-first {
    width: calc((4/14)*100% - 20px);
    margin-left: calc((0/14)*100% + 20px);
    float: left; }
  .sidebar-second #content {
    width: calc((8/14)*100% - 20px);
    margin-left: calc((1/14)*100% + 20px);
    float: left; }
  .sidebar-second .sidebar-second {
    width: calc((4/14)*100% - 20px);
    margin-left: calc((1/14)*100% + 20px);
    float: left; }
  .two-sidebars #content {
    width: calc((8/14)*100% - 20px);
    margin-left: calc((1/14)*100% + 20px);
    float: left; }
  .two-sidebars .sidebars {
    width: calc((4/14)*100% - 20px);
    margin-left: calc((1/14)*100% + 20px);
    float: left; } }

@media (min-width: 1440px) {
  .two-sidebars #content {
    width: calc((7/14)*100% - 20px);
    margin-left: calc((3/14)*100% + 20px);
    float: left;
    margin-right: -100%; }
  .two-sidebars .sidebars {
    float: none;
    width: auto;
    margin: 0; }
    .two-sidebars .sidebars .sidebar-first {
      width: calc((3/14)*100% - 20px);
      margin-left: calc((0/14)*100% + 20px);
      float: left; }
    .two-sidebars .sidebars .sidebar-second {
      width: calc((4/14)*100% - 20px);
      margin-left: calc((7/14)*100% + 20px);
      float: left; } }

/**
 * Messages.
 */
.messages, .messages--status, .messages--warning, .messages--error {
  margin: 10px 0;
  padding: 10px 10px 10px 50px;
  /* LTR */
  border: 1px solid #be7;
  position: relative; }
  .messages:before, .messages--status:before, .messages--warning:before, .messages--error:before {
    content: '✓';
    position: absolute;
    top: 20px;
    left: 8px;
    color: #be7;
    font-size: 1.5em;
    font-weight: bold;
    width: 1.5em;
    text-align: center; }

h3.message__title {
  margin: 0; }

.messages--warning {
  border-color: #ed5; }
  .messages--warning:before {
    content: '!';
    color: #ed5; }

.messages--error {
  border-color: #ed541d; }
  .messages--error:before {
    content: '×';
    color: #ed541d; }

.messages__list {
  margin: 0; }

.messages__item {
  list-style-image: none; }

/* Core/module installation error messages. */
.messages--error p.error {
  color: #333; }

/* System status report. */
.ok,
.messages--status {
  background-color: #f8fff0;
  color: #234600; }

.warning,
.messages--warning {
  background-color: #fffce5;
  color: #840; }

.error,
.messages--error {
  background-color: #fef5f1;
  color: #8c2e0b; }

/**
 * Tabs.
 */
/* Basic positioning styles shared by primary and secondary tabs. */
.tabs-primary,
.tabs.primary, .tabs-secondary {
  /* IE 9 and earlier don't understand gradients. */
  list-style: none;
  border-bottom: 1px solid #ccc;
  margin: 20px 0;
  padding: 0 2px;
  white-space: nowrap;
  font-family: "Gotham SSm A", "Gotham SSm B", "Gotham", arial, sans-serif; }
  .tabs-primary:after,
  .tabs.primary:after, .tabs-secondary:after {
    content: "";
    display: table;
    clear: both; }

.tabs.primary > li,
.tabs-primary__tab, .tabs.primary > li.is-active,
.tabs-primary__tab.is-active, .tabs-secondary__tab,
.tabs-secondary__tab.is-active {
  float: left;
  /* LTR */
  margin: 0 3px; }

.tabs.primary > li > a,
a.tabs-primary__tab-link, .tabs.primary > li.is-active > a.is-active,
a.tabs-primary__tab-link.is-active, a.tabs-secondary__tab-link, a.tabs-secondary__tab-link.is-active {
  border-right: 0;
  border-bottom: 0;
  display: block;
  text-decoration: none;
  font-size: modular-scale(1, 0.55em);
  line-height: 1.7em;
  font-weight: bold; }

/* Primary tabs. */
.tabs.primary > li,
.tabs-primary__tab,
.tabs.primary > li.is-active,
.tabs-primary__tab.is-active {
  border-top-left-radius: 4px;
  border-top-right-radius: 4px;
  border: 1px solid #ccc;
  border-bottom-width: 0;
  /* IE 9 and earlier don't understand gradients. */
  border-bottom: 0 \0/ie; }

.tabs.primary > li.is-active,
.tabs.primary > li.is-active,
.is-active.tabs-primary__tab {
  border-bottom-width: 0; }

.tabs.primary > li > a,
a.tabs-primary__tab-link, .tabs.primary > li.is-active > a.is-active,
a.tabs-primary__tab-link.is-active {
  border-top-left-radius: 4px;
  border-top-right-radius: 4px;
  transition: background-color 0.3s;
  color: #333;
  background-color: #dedede;
  padding: 0 1em;
  text-align: center; }

.tabs.primary > li > a:hover, .tabs.primary > li > a:focus,
a.tabs-primary__tab-link:hover,
a.tabs-primary__tab-link:focus {
  background-color: #e9e9e9;
  border-color: #f2f2f2; }

.tabs.primary > li > a:active,
a.tabs-primary__tab-link:active, .tabs.primary > li.is-active > a.is-active,
a.tabs-primary__tab-link.is-active {
  background-color: transparent;
  border-color: #fff; }

/* Secondary tabs. */
.tabs-secondary {
  font-size: .9em;
  /* Collapse bottom margin of ul.primary. */
  margin-top: -20px; }

.tabs-secondary__tab,
.tabs-secondary__tab.is-active {
  margin: 10px 3px; }

a.tabs-secondary__tab-link, a.tabs-secondary__tab-link.is-active {
  border-radius: .75em;
  transition: background-color 0.3s;
  background-color: #f2f2f2;
  color: #666;
  padding: 0 .5em; }

a.tabs-secondary__tab-link:hover, a.tabs-secondary__tab-link:focus {
  background-color: #dedede;
  border-color: #999;
  color: #333; }

a.tabs-secondary__tab-link:active, a.tabs-secondary__tab-link.is-active {
  background-color: #666;
  border-color: #000;
  color: #fff; }

/**
 * Unpublished note.
 */
/* The word "Unpublished" displayed underneath the content. */
.unpublished {
  height: 0;
  overflow: visible;
  /* Remove background highlighting from <mark> in normalize. */
  background-color: transparent;
  color: #d8d8d8;
  font-size: 75px;
  line-height: 1;
  font-family: Impact, "Arial Narrow", Helvetica, sans-serif;
  font-weight: bold;
  text-transform: uppercase;
  text-align: center;
  /* A very nice CSS3 property. */
  word-wrap: break-word; }

.field-item > *:first-child,
.block-content > *:first-child {
  margin-top: 0; }

.field-item > *:last-child,
.block-content > *:last-child {
  margin-bottom: 0; }

.field {
  margin: 0.5em 0; }
  .field .field-label {
    margin-bottom: 0; }

#page-control-container {
  position: relative; }
  #page-control-container .control-toggle {
    position: absolute;
    top: 0;
    right: 0;
    z-index: 10; }
    #page-control-container .control-toggle span {
      cursor: pointer; }

/**
 * Inline styles.
 */
/* List of links generated by theme_links(). */
.inline {
  display: inline;
  padding: 0; }
  .inline li {
    display: inline;
    list-style-type: none;
    padding: 0 1em 0 0;
    /* LTR */ }

/* The inline field label used by the Fences module. */
span.field-label {
  padding: 0 1em 0 0;
  /* LTR */ }

/* Default WordPress screen reader style */
.screen-reader-text {
  clip: rect(1px, 1px, 1px, 1px);
  position: absolute !important;
  height: 1px;
  width: 1px;
  overflow: hidden; }

.screen-reader-text:focus {
  background-color: #f1f1f1;
  border-radius: 3px;
  box-shadow: 0 0 2px 2px rgba(0, 0, 0, 0.6);
  clip: auto !important;
  color: #21759b;
  display: block;
  height: auto;
  left: 5px;
  line-height: normal;
  padding: 15px 23px 14px;
  text-decoration: none;
  top: 5px;
  width: auto;
  z-index: 100000; }

/*
 * The skip-link link will be completely hidden until a user tabs to the link.
 */
#skip-link {
  margin: 0; }
  #skip-link a,
  #skip-link a:visited {
    display: block;
    width: 100%;
    padding: 2px 0 3px 0;
    text-align: center;
    background-color: #666;
    color: #fff; }

/**
 * @file
 * Print styling
 *
 * We provide some sane print styling for Drupal using Zen's layout method.
 */
/**
 * By importing this CSS file as media "all", we allow this print file to be
 * aggregated with other stylesheets, for improved front-end performance.
 */
@media print {
  /* Underline all links. */
  a:link,
  a:visited {
    text-decoration: underline !important;
    /* Don't underline site link. */ }
    a:link.site-link,
    a:visited.site-link {
      text-decoration: none !important; }
  #content {
    /* Add visible URL after links. */
    /* Only display useful links. */
    /* Add visible title after abbreviations. */ }
    #content a[href]:after {
      content: " (" attr(href) ")";
      font-weight: normal;
      font-size: 10px; }
    #content a[href^="javascript:"]:after,
    #content a[href^="#"]:after {
      content: ""; }
    #content abbr[title]:after {
      content: " (" attr(title) ")"; }
  /* Un-float the content. */
  #content {
    float: none !important;
    width: 100% !important;
    margin: 0 !important;
    padding: 0 !important; }
  /* Turn off any background colors or images. */
  body,
  #page,
  #main,
  #content {
    color: #000;
    background-color: transparent !important;
    background-image: none !important; }
  /* Hide sidebars and nav elements. */
  #skip-link,
  #navigation,
  #footer,
  .sidebars,
  .breadcrumb,
  .pager,
  .feed-icons {
    visibility: hidden;
    display: none; } }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
