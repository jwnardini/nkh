<?php

/**
 * @file
 * Attaches form as field to view mode.
 */

use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
use Drupal\nkh_resource_center\Form\ViewForm;
use Drupal\Core\Url;

/**
 * Implements hook_page_attachments().
 */
function nkh_resource_center_page_attachments(array &$attachments) {
  $attachments['#attached']['library'][] = 'nkh_resource_center/single_form';
}

/**
 * Implements hook_entity_extra_field_info().
 */
function nkh_resource_center_entity_extra_field_info() {
  $extra = [];
  $extra['node']['resource']['display']['nkh_resource_single_form'] = [
    'label' => t('Resource Center Single Resource Form'),
    'description' => t('Resource Center Form for individual nodes.'),
    'weight' => 0,
    'visible' => FALSE,
  ];
  return $extra;

}

/**
 * Implements hook_ENTITY_TYPE_view().
 */
function nkh_resource_center_node_view(array &$build, EntityInterface $entity, EntityViewDisplayInterface $display, $view_mode) {
  if ($entity->getType() == 'resource') {
    $entity_id = $entity->id();
    if ($view_mode == 'full') {
      if ($display->getComponent('nkh_resource_single_form')) {
        $form = \Drupal::formBuilder()->getForm('Drupal\nkh_resource_center\Form\SingleResource', $entity_id);
        $build['nkh_resource_single_form'] = $form;
      }
    }
  }
}

/**
 * Implements hook_theme_suggestions_hook_alter().
 */
function nkh_resource_center_theme_suggestions_alter(array &$suggestions, array $variables, $hook) {
  if (isset($variables['element']) && isset($variables['element']['#type']) && $variables['element']['#type'] == 'form') {
    $form_id = $variables['element']['#form_id'];
    $original_theme_hook = $variables['theme_hook_original'];

    if ($form_id == 'nkh_resource_center_single') {
      $suggestions[] = $original_theme_hook . '__' . str_replace('-', '_', $variables['element']['#id']);
    }
    if ($form_id == 'nkh_resource_center_listing') {
      $suggestions[] = $original_theme_hook . '__' . str_replace('-', '_', $variables['element']['#id']);
    }
    return $suggestions;
  }
}

/**
 * Implements hook_preprocess_views_view().
 */
function nkh_resource_center_preprocess_views_view__db_resource_center(&$variables) {
  $query_filters = \Drupal::request()->query->all();
  $sort_order = '';
  $queries = '';
  if ($query_filters) {
    if ((isset($query_filters['search']) && $query_filters['search'] != '') || isset($query_filters['results'])) {
      $queries = 'Searching for: ';
    }

  }

  foreach ($query_filters as $filter => $term) {
    switch ($filter) {
      case 'search':
        if ($term != "") {
          $queries .= '"' . $term . '", ';
          break;
        }
        else {
          break;
        }
      case 'sort_order':
        if ($term == 'ASC') {
          $sort_order .= 'sorting A-Z ';
        }
        else {
          $sort_order .= 'sorting Z-A ';
        }
        break;
    }
    if (isset($query_filters['results']) && is_array($term)) {
      foreach ($term as $result) {
        $tmp_query = explode(':', $result);
        $queries .= \Drupal::entityTypeManager()->getStorage('taxonomy_term')->load($tmp_query[1])->getName() . ', ';
      }
    }
  }
  $variables['queries'] = trim($queries, ', ');
  $variables['sort_order'] = $sort_order;
}

/**
 * Implements hook_theme().
 */
function nkh_resource_center_theme($existing, $type, $theme, $path) {
  return [
    'node__resource__nkh_form_teaser' => [
      'base hook' => 'node',
    ],
    'views_view__db_resource_center' => [
      'base hook' => 'view',
    ],
    'region__sidebar' => [
      'base hook' => 'region',
    ],
  ];
}

/**
 * Implements hook_preprocess_HOOK().
 */
function nkh_resource_center_preprocess_node(&$variables) {
  $element = $variables['elements'];
  $view_mode = $element['#view_mode'];

  if ($view_mode == 'nkh_form_teaser' && $element['#node']->get('field_upload') !== NULL) {
    $nid = $element['#node']->id();
    $path = $element['#node']->url();
    if ($element['#node']->get('field_upload')->entity) {
      $file_id = $element['#node']->get('field_upload')->entity->id();
      $file_uri = $element['#node']->get('field_upload')->entity->getFileUri();
    }
    $form = new ViewForm($nid);
    $variables['form'] = \Drupal::formBuilder()->getForm($form, $nid, $path, $file_id, $file_uri);
  }
}

/**
 * Implements hook_form_alter().
 */
function nkh_resource_center_form_alter(&$form, $form_state, $form_id) {
  if ($form['#id'] === 'views-exposed-form-db-resource-center-page-1') {
    $form['actions']['reset']['#access'] = TRUE;
  }
}
